input {
    file {
        path => [
            "/mnt/logs/atlassian-confluence.log"
        ]
        type => "log"
        start_position => "end"
        stat_interval => 1
        discover_interval => 60
    }
}

filter {
    if [type] == "log" {
        grok {
            match => [ "message", "%{TIMESTAMP_ISO8601:timestamp} %{WORD:severity} %{NOTSPACE} \[atlassian\.confluence\.util\.AccessLogFilter\] doFilter %{USERNAME:username} %{DATA:type} %{GREEDYDATA:http_request} %{INT:starting_memory_free}[+-]%{INT:difference_in_free_mem} %{INT:query_time} %{IP:remote_address}" ]
        }

        if "_grokparsefailure" in [tags] {
            drop {}
        }

        date {
            match => [ "timestamp", "YYYY-MM-dd HH:mm:ss,SSS", "YYYY-MM-dd'T'HH:mm:ss,SSS", "ISO8601" ]
            target => "@timestamp"
        }

        mutate {
            remove_field => [ "timestamp" ]
        }

        mutate {
            remove_field => [ "message" ]
        }
    }
}

output {
    elasticsearch {
        hosts => ["elasticsearch:9200"]
        index => "confluence.access.log-%{+YYYY.MM.dd}"
        template_name => "confluence.access.log"
    }
}